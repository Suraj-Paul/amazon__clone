{"version":3,"sources":["StateProvider.js","firebase.js","Header.js","Product.js","Home.js","reducer.js","SubTotal.js","CheckoutProduct.js","CheckOut.js","Login.js","Payment.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Header","basket","user","className","to","src","classNmae","type","onClick","signOut","email","length","Product","id","title","image","price","rating","dispatch","console","log","Array","fill","map","_","i","item","Home","getBasketTotal","reduce","amount","state","action","index","findIndex","basketItem","newBasket","splice","warn","SubTotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparater","prefix","e","push","CheckoutProduct","CheckOut","alt","Login","useState","setEmail","password","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","Payment","stripe","useStripe","elements","useElements","succeeded","setSucceeded","processing","setProcessing","setError","disabled","setDisabled","clientSecret","setClientSecret","useEffect","a","Axios","method","url","response","data","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","replace","onSubmit","empty","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19d4db27.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\n//Prepare the datalayer\r\nexport const StateContext = createContext();\r\n//Wrap our app and provide data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n//Pull the info from datalayer\r\nexport const useStateValue = () => useContext(StateContext);","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCjmNS32u27iy-QJqKw_8QMu3LY3BrEzTU\",\r\n    authDomain: \"clone-68909.firebaseapp.com\",\r\n    databaseURL: \"https://clone-68909.firebaseio.com\",\r\n    projectId: \"clone-68909\",\r\n    storageBucket: \"clone-68909.appspot.com\",\r\n    messagingSenderId: \"157564644236\",\r\n    appId: \"1:157564644236:web:b1fcbbf4a44340a924c4a9\",\r\n    measurementId: \"G-N1CDVPEHRL\"\r\n};\r\n  \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nexport { db, auth };\r\n","import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\nfunction Header() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const handleAuthentication = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to = \"/\">\r\n            <img  className =\"header__logo\" src = \"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"/>\r\n            </Link>\r\n            <div className = \"header__search\">\r\n                <input classNmae = \"header__searchInput\" type = \"text\"/>\r\n                <SearchIcon className = \"header__searchIcon\"/> \r\n            </div>\r\n            <div className=\"header__nav\">\r\n                <Link to = {!user && '/login'}>\r\n                <div onClick ={handleAuthentication} className = \"header__component\">\r\n                    <span className = \"header__component1__user\">\r\n                        Hello {!user?'Guest':user.email}\r\n                    </span>\r\n                    <span className = \"header__component2\" >\r\n                        {user?'Sign Out':'Sign In'}\r\n                    </span>\r\n                </div>\r\n                </Link>\r\n                \r\n                <div className = \"header__component\">\r\n                    <span className = \"header__component1\">\r\n                        Returns\r\n                    </span>\r\n                    <span className = \"header__component2\">\r\n                        & Orders\r\n                    </span>\r\n                </div>\r\n                <div className = \"header__component\">\r\n                    <span className = \"header__component1\">\r\n                        Your \r\n                    </span>\r\n                    <span className = \"header__component2\">\r\n                        Prime\r\n                    </span>\r\n                </div>\r\n                <Link to = \"checkout\">\r\n                    <div className = \"header__componentBasket\">\r\n                        <ShoppingBasketIcon/>\r\n                            <span className=\"header__component2 header__basketCount\">{basket?.length}</span>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n// import ReactNotification from 'react-notifications-component';\r\n// import 'react-notifications-component/dist/theme.css';\r\nimport './Product.css';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n    console.log('items in basket--->',basket)\r\n    \r\n    const addToBasket = () => {\r\n        //dispatch the items into the data layer\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n    };\r\n    return (\r\n        <div className= \"product\">\r\n            <div className= \"product__info\">\r\n                <p>{title}</p>\r\n                <p className= \"product__price\">\r\n                    <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className= \"product__rating\">\r\n                    {Array(rating).fill().map((_,i) => (\r\n                        <p>⭐️</p>\r\n                    ))}    \r\n                </div>\r\n            </div>\r\n            <img className= \"AddToBasket\" src= {image}/>\r\n            <button onClick = {addToBasket}><a>Add to Basket</a></button>    \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react'\r\n\r\nimport './Home.css'\r\nimport Product from './Product';\r\nimport { CarouselProvider, Slider, Slide, ButtonBack, ButtonNext } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\">\r\n            <div className =\"home__container\">\r\n                <img className=\"home__image\" src=\"https://images-eu.ssl-images-amazon.com/images/G/31/img20/PC/Accessories/GW/PC-acc_june20_DesktopHero_1500x600._CB429195970_.jpg\" />\r\n                <div className = \"home__row\">\r\n                    <Product id = \"401\" title =\"HP-15\" price = {35000} image= \"https://static.toiimg.com/photo/66126276/HP-15-da0074tx-4TT07PA-Laptop-Core-i3-7th-Gen8-GB1-TBDOS2-GB.jpg\" rating = {5}/>\r\n                    <Product id = \"402\" title=\"Poco X3\" price={15999} image=\"https://www.gizmochina.com/wp-content/uploads/2020/09/POCO-X3-renders-1024x698.jpg\" rating={4} />                      \r\n                </div>\r\n                <div className = \"home__row\">\r\n                    <Product id = \"404\" title =\"Galaxy Smart watch\" price = {20000} image= \"https://s1.poorvikamobile.com/image/data/AAA%20Acc/samsung/New/Samsung%20Galaxy%20Active%202%2044mm%20BT%20Smartwatch/Silver/Samsung-Galaxy-Active-2-44mm-BT-Smartwatch-Silver-5_ios.jpeg\"rating = {5}/> \r\n                    <Product id = \"405\" title =\"HeadSet\" price = {2999} image= \"https://assets.croma.com/medias/sys_master/images/images/h4f/hdb/8945015554078/211151_pjpeg.jpg\" rating = {5}/> \r\n                    <Product id=\"406\" title=\"Gamming mouse\" price={500} image=\"https://target.scene7.com/is/image/Target/GUEST_bb4cce99-b936-456e-8433-97d500f03e90?wid=488&hei=488&fmt=pjpeg\" rating={5} /> \r\n                </div>\r\n                <div className = \"home__row\">\r\n                    <Product id=\"407\" title=\"Odyssey G9\" price={115650} image=\"https://images-na.ssl-images-amazon.com/images/I/81RcJoVbvDL._AC_SL1500_.jpg\" rating={5} /> \r\n                    <Product id = \"403\" title=\"ipad Pro\" price={71000} image=\"https://www.pngitem.com/pimgs/m/175-1757515_apple-ipad-pro-11-hd-png-download.png\" rating={5} />\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Switch } from \"react-router-dom\";\r\n\r\nexport const initialState = {\r\n    basket: [],\r\n    user:null\r\n};\r\n//Selector\r\nexport const getBasketTotal = (basket) =>\r\n    basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\nconst reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case 'ADD_TO_BASKET':\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n            const index = state.basket.findIndex(\r\n                (basketItem) => basketItem.id === action.id\r\n            );\r\n            console.log('>>>>>',index)\r\n            let newBasket = [...state.basket];\r\n            if (index >= 0) {\r\n                newBasket.splice(index, 1);\r\n                console.log('>>>>>',newBasket)\r\n                \r\n            } else {\r\n                console.warn(`Cant remove product (id:${action.id})as its not in basket`)\r\n            }\r\n            return {\r\n                ...state,\r\n                basket:newBasket\r\n            }\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                user:action.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport './SubTotal.css';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SubTotal() {\r\n    const [{basket}, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"subTotal\">\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>Subtotal ({basket.length} items):<stong>{value}</stong></p>\r\n                        <small className=\"subTotal__gift\">\r\n                            <input type = \"checkbox\"/>This contain a Gift\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparater={true}\r\n                prefix={\"₹\"}\r\n            />\r\n            <button onClick = {e => history.push('/payment')}>Proceed to Checkout</button>     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubTotal;\r\n","import React from 'react';\r\nimport './CheckoutProduct.css';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating }) {\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    const removefromBasket = () => {\r\n        //remove item from basket...\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id:id,\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div className=\"checkoutproduct\">\r\n            <img className=\"checkoutproduct__image\" src={image} />\r\n            \r\n            <div className=\"checkoutproduct__info\">\r\n                <p className=\"checkoutproduct__title\">{title}\r\n                </p>\r\n                <p className=\"checkoutproduct__price\">\r\n                    <small>₹</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutproduct__rating\">\r\n                    {Array(rating)\r\n                        .fill().map((_,i)=>(\r\n                        <p>⭐️</p>\r\n                        ))}\r\n                </div>\r\n                <button onClick= {removefromBasket}>Remove from Basket</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct;\r\n","import React from 'react';\r\nimport './CheckOut.css'\r\nimport SubTotal from './SubTotal';\r\nimport CheckoutProduct from './CheckoutProduct'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckOut() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img className=\"checkout__ad\" src=\"https://images-eu.ssl-images-amazon.com/images/G/31/img19/AmazonPay/ScanExplorePay/TopBanner_New_Desktop.jpg\" alt=\"\" />\r\n                <div className=\"checkoutproducts\">\r\n                    <h3>{user?.email}</h3>\r\n                    <h2 className=\"checkout__title\">\r\n                        Your Shopping Basket    \r\n                    </h2>\r\n                    {basket.map(item => (\r\n                        <CheckoutProduct\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}     \r\n                    />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout__right\">\r\n                <SubTotal/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckOut\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    // const [displayName, setDisplayName] = useState('')\r\n\r\n\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n        //firebase logIN stuff...\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(\r\n                auth => {\r\n            history.push('/')\r\n                })\r\n        .catch(error => alert(error.message))\r\n        \r\n\r\n    }\r\n    const register = e => {\r\n        e.preventDefault();\r\n        //firebase Register stuff...\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                console.log(auth)\r\n                if (auth) {\r\n                    history.push('/')\r\n                }\r\n            })\r\n            .catch(error => alert(error.message))\r\n        alert(\"Account Created Successfully! You'll get auto login...\")\r\n    }\r\n    // const onChangeHandler = event => {\r\n    //     const { name, value } = event.currentTarget;\r\n    //     if (name === \"displayName\") {\r\n    //       setEmail(value);\r\n    //     } else if (name === \"email\") {\r\n    //       setDisplayName(value);\r\n    //     }\r\n    //   };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to='/'>\r\n            <img  className = \"login__logo\"src = \"https://www.acisolutions.net/wp-content/uploads/2019/09/amazon-logo-vector-png-amazon-logo-vector-512.png\"/>\r\n            </Link>    \r\n            <div className='login__container'>\r\n                <h1>Sign-in</h1>\r\n                <form>\r\n                    {/* <h5>Name</h5>\r\n                    <input type=\"text\" value={displayName} onChange={onChangeHandler}/> */}\r\n                    <h5>Email</h5>\r\n                    <input type=\"text\" value={email} onChange={e =>setEmail(e.target.value)}/>\r\n                    <h5>Password</h5>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n                    <button type = 'submit' onClick={signIn}className='login__signinButton'>Sign in\r\n                    </button>\r\n                </form>\r\n                <p>\r\n                    By signing-in you agree to the AMAZON condition of use & sale. Please see our privacy notice, our Cookies notice and our interest based ads notice.\r\n                </p>\r\n                <button onClick= {register} className= 'login__resgistrationButtton'>Create Account</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useStateValue } from './StateProvider';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from './reducer';\r\nimport Axios from 'axios';\r\n\r\nfunction Payment() {\r\n\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n    useEffect(() => {\r\n        // Generate a special stripe  secret which allow us to change a custumer\r\n        const getClientSecret = async () => {\r\n            const response = await Axios({\r\n                method: 'post',\r\n                //Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n        getClientSecret();  \r\n    },[basket])\r\n\r\n    const handleSubmit = async(event) => {\r\n        //stripe stuffs goes here...\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card:elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            //payment Intent = Payment confirmation\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            history.replace(\"/orders\")\r\n        })\r\n        \r\n    }\r\n    const handleChange = event => {\r\n        //Listen for changes in the CardElement\r\n        //and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error?event.error.message:\"\")     \r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n                <h1>Checkout(<Link to = \"/checkout\">{basket?.length}items</Link>)\r\n                 \r\n                </h1>\r\n                {/* payment sections- delivery adderess */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>At + Post : This is address</p>\r\n                        <p>Dist : Demo, 82XX10</p>\r\n                    </div>\r\n\r\n                </div>\r\n                {/* payment sections- review items*/}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review items and Delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment__items\">\r\n                        {\r\n                            basket.map(item => (\r\n                                <CheckoutProduct\r\n                                    id={item.id}\r\n                                    title={item.title}\r\n                                    image={item.image}\r\n                                    price={item.price}\r\n                                    rating={item.rating}     \r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {/* payment sections- payment method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Methods</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/* Stripe will go here */}\r\n                        <form onSubmit = {handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n                            <div className=\"payment__priceContainer\">\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <h3>Order Total: {value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparater={true}\r\n                                    prefix={\"₹\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing? <p>Processing</p>:\"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {/* Errors */}\r\n                            {error && <div>{error}</div>}            \r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CheckOut from './CheckOut';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nconst promise = loadStripe(\"pk_test_51HSMmQGyS6WEA0mbRd6JXkpXBaw6UyxyAdnESrWBIEUoItEGwCmGgVCrKUWgDQQW6c2KrZ7SRJK6hHpKdWG2BdMq00zf1VHQDy\")\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  \n  useEffect(() => {\n    //will only run once when the app component loads...\n    auth.onAuthStateChanged(authUser => {\n      console.log('THE USER IS>>>>', authUser)\n      if (authUser) {\n        //the user just loggedIn or the use was loggedIn\n        dispatch({\n          type: 'SET_USER',\n          user:authUser\n        })\n\n      } else {\n        //the user logged out\n        dispatch({\n          type: 'SET_USER',\n          user:null\n        })\n      }\n    })\n  },[])\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/login'>\n            <Login/>\n          </Route>\n          <Route path = \"/checkout\">\n            <Header />\n            <CheckOut/>\n          </Route>\n          <Route path = \"/payment\">\n            <Header />\n            <Elements stripe = {promise}>\n              <Payment />\n            </Elements>\n          </Route>\n          <Route path = \"/\">\n            <Header/>\n            <Home/>\n          </Route>\n        </Switch> \n      </div> \n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n      <StateProvider initialState = {initialState} reducer = {reducer}>\n        <App />\n      </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}